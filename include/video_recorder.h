/* RustSmartScope C FFI Header */
/* Auto-generated by cbindgen */


#ifndef SMARTSCOPE_FFI_H
#define SMARTSCOPE_FFI_H

#pragma once

/* Generated with cbindgen:0.29.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * Initialize screen recorder
 */
int32_t smartscope_screen_recorder_init(void);

/**
 * Set screen dimensions
 */
int32_t smartscope_screen_recorder_set_dimensions(uint32_t width, uint32_t height);

/**
 * Set frame rate
 */
int32_t smartscope_screen_recorder_set_fps(uint32_t fps);

/**
 * Start recording with auto-generated output path
 * root_dir: root directory path (e.g., "/home/user/data")
 * Returns 0 on success, -1 on error
 */
int32_t smartscope_screen_recorder_start(const char *root_dir);

/**
 * Stop recording
 */
int32_t smartscope_screen_recorder_stop(void);

/**
 * Check if recording is active
 */
int32_t smartscope_screen_recorder_is_recording(void);

/**
 * Get elapsed recording time in seconds
 */
uint64_t smartscope_screen_recorder_elapsed_seconds(void);

/**
 * Get output file path (caller must NOT free the returned pointer)
 */
const char *smartscope_screen_recorder_get_output_path(void);

/**
 * Get backend name
 */
const char *smartscope_screen_recorder_get_backend_name(void);

/**
 * Get last error message
 */
const char *smartscope_screen_recorder_get_last_error(void);

/**
 * Shutdown recorder
 */
void smartscope_screen_recorder_shutdown(void);

#endif  /* SMARTSCOPE_FFI_H */
